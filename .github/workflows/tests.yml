name: Tests

on:
  push:
    paths-ignore:
      - "README.md"
      - "renovate.json"
    branches:
      - 'main'
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  backend-tests:
    name: Back-end tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "flask/uv.lock"
      - name: Setup project
        run: uv --directory flask sync --locked --all-extras --dev
      - name: Run tests
        run: uv --directory flask run pytest
  frontend-tests:
    name: Front-end tests
    if: ${{ false }}  # Disabled as there are no tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: angular/package-lock.json
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
      - name: Run tests
        run: cd angular; npm i; CHROMIUM_BIN=$(which chrome) npm test
  frontend-lint:
    name: Front-end linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: angular/package-lock.json
      - name: Run linting
        run: cd angular; npm i; npm run lint
  image:
    name: Docker image building
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Calculate image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # See https://docs.docker.com/build/ci/github-actions/examples/#github-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max

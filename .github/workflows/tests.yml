name: Tests

on:
  push:
    paths-ignore:
      - "README.md"
      - "renovate.json"
    branches:
      - 'main'
  pull_request:

jobs:
  backend-tests:
    name: Back-end tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd flask; pip install -r requirements.txt
      -
        name: Run tests
        run: python -m unittest
  frontend-tests:
    name: Front-end tests
    if: ${{ false }}  # Disabled as there are no tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Setup Node
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: angular/package-lock.json
      -
        name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
      -
        name: Run tests
        run: cd angular; npm i; CHROMIUM_BIN=$(which chrome) npm test
  frontend-lint:
    name: Front-end linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: angular/package-lock.json
      - name: Run linting
        run: cd angular; npm i; npm run lint
  image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Calculate image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # See https://docs.docker.com/build/ci/github-actions/examples/#github-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max

name: Docker build

on:
  push:
    tags:
      - "v[0-9].[0-9]+.[0-9]+"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-24.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Calculate image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ github.repository }},enable=${{startsWith(github.ref, 'refs/tags/v')}}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=,enable=${{startsWith(github.ref, 'refs/tags/v') == 'false' }}
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  helm:
    # credits to https://github.com/fabianlee/google-hello-app-logging-multiarch/blob/main/.github/workflows/github-actions-buildOCI.yml
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
    needs: docker
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Configure chart AppVersion and chartVersion from latest image in GitHub Package Registry
        run: |
          # checkout to main branch
          git checkout main
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d/ -f2)
          set -x
          # https://github.com/orgs/community/discussions/26279
          # list existing OCI image versions (from Package Registry)
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          curl -H "Authorization: Bearer ${GHCR_TOKEN}" https://ghcr.io/v2/${{ github.repository_owner }}/$REPO_NAME/tags/list | tee versions.json
          # do semantic sort on existing tags, get latest
          VERSION=$(jq '.tags[]' versions.json -r | grep -v latest | sort -Vr | head -n1)
          # customize helm chart appVersion to match latest OCI image tag in GitHub Package Registry
          sed -i "s/appVersion:.*/appVersion: \"$VERSION\"/" charts/$REPO_NAME/Chart.yaml
          sed -i "s/version:.*/version: \"$VERSION\"/" charts/$REPO_NAME/Chart.yaml
          # repush the change to default branch
          git add charts/$REPO_NAME/Chart.yaml
          git commit -m "release: update Chart.yaml to version $CHART_VERSION"
          git push origin main
      - name: Run chart-releaser
        # publishes helm index: https://the-technat.github.io/self-host-planning-poker/index.yaml
        # publishes tgz as github release: https://github.com/the-technat/self-host-planning-poker/releases/download/self-host-planning-poker-0.0.2/self-host-planning-poker-${CHART_VERSION}.tgz
        # requires a branch called gp-pages to exist and configured in the repo settings
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"